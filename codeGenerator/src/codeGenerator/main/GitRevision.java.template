/**
 * @file SvnRevision.java
 * This is an automatically generated file, which offers an API to the Git
 * revision of the project. The Git number of linear commits is used as least
 * significant field in the version designation of the software components
 * belonging to the project.
 *   This file is generated by TortoiseGit tool GitWCRev.exe from template file
 * GitRevision.java.template in every build. This is done under control of
 * the ant file build.xml.
 *   This file has not been added to SVN as it is re-generated on the fly
 * in every build.
 *
 * Copyright (C) 2016-2024 Peter Vranken (mailto:Peter_Vranken@Yahoo.de)
 *
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by the
 * Free Software Foundation, either version 3 of the License, or any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License
 * for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
/* Interface of class GitRevision.java
 *   GitRevision.java
 */

package codeGenerator.main;

/**
 * Provide the Git revision of the code generator.
 *   @author Peter Vranken (mailto:Peter_Vranken@Yahoo.de)
 */

public class GitRevision
{
    /** The global logger object for all progress and error reporting. */
    //private static final Logger _logger = LogManager.getLogger(GitRevision.java.class);

    /**
     * A new instance of GitRevision.java is created. This class only
     * provides static mothods and the constructor is not accessible.
     */
    private GitRevision()
    {
    } /* End of GitRevision.GitRevision. */

    /**
     * Get the GIT revision number of the code generator project.
     *   @return
     * Get the revision number.
     */
    static public int getProjectRevision()
    {
        return $WCLOGCOUNT$; /* In SVN we has used $WCREV$, but for Git, this returns the
                                commit ID. */
    }

} /* End of class GitRevision definition. */







